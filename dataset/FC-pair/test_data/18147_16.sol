contract c18147{
    /**
    * @notice Helper function actually performing the sending of tokens.
    * @param _from The address holding the tokens being sent
    * @param _to The address of the recipient
    * @param _amount The number of tokens to be sent
    * @param _userData Data generated by the user to be passed to the recipient
    * @param _operatorData Data generated by the operator to be passed to the recipient
    * @param _preventLocking `true` if you want this function to throw when tokens are sent to a contract not
    *  implementing `erc777_tokenHolder`.
    *  ERC777 native Send functions MUST set this parameter to `true`, and backwards compatible ERC20 transfer
    *  functions SHOULD set this parameter to `false`.
    */
    function doSend(
        address _from,
        address _to,
        uint256 _amount,
        bytes _userData,
        address _operator,
        bytes _operatorData,
        bool _preventLocking
    )
        private
    {
        requireMultiple(_amount);
        callSender(_operator, _from, _to, _amount, _userData, _operatorData);
        require(_to != 0x0);                  // forbid sending to 0x0 (=burning)
        require(balanceOf[_from] >= _amount); // ensure enough funds
        balanceOf[_from] = balanceOf[_from].sub(_amount);
        balanceOf[_to] = balanceOf[_to].add(_amount);
        callRecipient(_operator, _from, _to, _amount, _userData, _operatorData, _preventLocking);
        emit Sent(_operator, _from, _to, _amount, _userData, _operatorData);
        emit Transfer(_from, _to, _amount);
    }
}