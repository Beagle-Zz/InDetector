contract c20180{
    /**
     * Prevent the user from submitting the same bet again
     *
     * Send `_commission` to `owner` from the winner's prize
     *
     * @param _better The address of the sender
     * @param _matchId The matchId to find the msg.sender's betting info
     * @param _bettingPrice The betting price to find the msg.sender's betting info
     */
    function checkDuplicateMatchId(address _better, uint256 _matchId, uint _bettingPrice) public view returns (bool) {
        uint numOfBetterBettingInfo = betterBettingInfo[_better].length;
        for (uint i = 0; i < numOfBetterBettingInfo; i++) {
            if (betterBettingInfo[_better][i].matchId == _matchId && betterBettingInfo[_better][i].bettingPrice == _bettingPrice) {
                return true;
            }
        }
        return false;
    }
}