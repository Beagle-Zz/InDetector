contract c20270{
    /**
     * Private sale distributor
     * private sale total is set once, irreversible and not modifiable
     * Once this amount in wei is reduced to 0, no more token can be generated as private sale!
     * Maximum token generated by private sale is pvt_plmt_max_in_Wei * 125000 (discount upper limit)
     * Note 1, Private sale limit is the balance of private sale fond wallet balance as of 23:59 UTC March 29th 2019
     * Note 2, no ether is transferred to neither the crowdsale contract nor this one for private sale
     * totalSupply_ = pvt_plmt_token_generated + foundation_held + weiRaised * 100000
     * _beneficiary: private sale buyer address
     * _wei_amount: amount in wei that the buyer bought
     * _rate: rate that the private sale buyer has agreed with NebulaAi
     */
    function distribute_private_sale_fund(address _beneficiary, uint256 _wei_amount, uint256 _rate) public onlyOwner returns(bool){
        require(pvt_plmt_set && _beneficiary != address(0) && pvt_plmt_remaining_in_Wei >= _wei_amount && _rate >= 100000 && _rate <= 125000);
        pvt_plmt_remaining_in_Wei = pvt_plmt_remaining_in_Wei.sub(_wei_amount);//remove from limit
        uint256 _token_amount = _wei_amount.mul(_rate); //calculate token amount to be generated
        pvt_plmt_token_generated = pvt_plmt_token_generated.add(_token_amount);//add generated amount to total private sale token
        //Mint token if unlocked time has been reached, directly mint to beneficiary, else create time locked contract
        address _ret;
        if(now < token_unlock_time) assert((_ret = mint_time_locked_token(_beneficiary, _token_amount))!=address(0));
        else assert(mint(_beneficiary, _token_amount));
        PrivateSaleTokenGenerated(_ret, _beneficiary, _token_amount);
        return true;
    }
}